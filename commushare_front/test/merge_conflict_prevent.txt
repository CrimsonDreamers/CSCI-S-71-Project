testWidgets('A button for adding items is displayed in the HomePage',
      (WidgetTester tester) async {
    // Build our app and trigger a frame.
    await tester.pumpWidget(MaterialApp(home: Home()));

    expect(find.byKey(new Key("add_Button")), findsOneWidget);
  
  });

  testWidgets('The adding button is clickable',
      (WidgetTester tester) async {
    // Build our app and trigger a frame.
    await tester.pumpWidget(MaterialApp(home: Home()));

    expect(find.byKey(new Key("add_Button")), findsOneWidget);
    await tester.tap(find.byKey(const Key("add_Button")));
    await tester.pump();
  
  });

  testWidgets('The adding button is clickable and triggers the loan an item page',
      (WidgetTester tester) async {
    // Build our app and trigger a frame.
    await tester.pumpWidget(MaterialApp(home: Home()));

    expect(find.byKey(new Key("add_Button")), findsOneWidget);
    await tester.tap(find.byKey(const Key("add_Button")));
    await tester.pump();

     // Verify that the appearing view changed and that we are now on the creating item page
    expect(find.byWidgetPredicate((Widget widget) => widget is CreateItemView),
        findsOneWidget);
  
  });

  testWidgets('FormFields appears in the loan an item page',
      (WidgetTester tester) async {
    // Build our app and trigger a frame.
    await tester.pumpWidget(MaterialApp(home: Home()));

    expect(find.byKey(new Key("add_Button")), findsOneWidget);
    await tester.tap(find.byKey(const Key("add_Button")));
    await tester.pump();

     // Verify that the appearing view changed and that we are now on the creating item page
    expect(find.byWidgetPredicate((Widget widget) => widget is CreateItemView),
        findsOneWidget);

    // Verify that two form fields appear (Name, Description)
    expect(find.byWidgetPredicate((Widget widget) => widget is FormField),
        findsExactly(2));

  });

  testWidgets('The loan an item page is clear on its purpose',
      (WidgetTester tester) async {
    // Build our app and trigger a frame.
    await tester.pumpWidget(MaterialApp(home: Home()));

    expect(find.byKey(new Key("add_Button")), findsOneWidget);
    await tester.tap(find.byKey(const Key("add_Button")));
    await tester.pump();

     // Verify that the appearing view changed and that we are now on the creating item page
    expect(find.byWidgetPredicate((Widget widget) => widget is CreateItemView),
        findsOneWidget);

    // Verify that two form fields appear (Name, Description)
    expect(find.text("Which item do you want to make available to the community ?"),
        findsExactly(2));

  });

  testWidgets('A confirm button is displayed',
      (WidgetTester tester) async {
    // Build our app and trigger a frame.
    await tester.pumpWidget(MaterialApp(home: Home()));

    expect(find.byKey(new Key("add_Button")), findsOneWidget);
    await tester.tap(find.byKey(const Key("add_Button")));
    await tester.pump();

     // Verify that the appearing view changed and that we are now on the creating item page
    expect(find.byWidgetPredicate((Widget widget) => widget is CreateItemView),
        findsOneWidget);

    // Verify that two form fields appear (Name, Description)
    expect(find.byKey(new Key("confirm_loan_Button")), findsOneWidget);

  });