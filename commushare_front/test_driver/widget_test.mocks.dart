// Mocks generated by Mockito 5.4.4 from annotations
// in commushare_front/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:commushare_front/model/item.dart' as _i5;
import 'package:commushare_front/service/database.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCollectionReference_0<T extends Object?> extends _i1.SmartFake
    implements _i2.CollectionReference<T> {
  _FakeCollectionReference_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i3.DatabaseService {
  MockDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CollectionReference<Map<String, dynamic>> get ItemsCollection =>
      (super.noSuchMethod(
        Invocation.getter(#ItemsCollection),
        returnValue: _FakeCollectionReference_0<Map<String, dynamic>>(
          this,
          Invocation.getter(#ItemsCollection),
        ),
      ) as _i2.CollectionReference<Map<String, dynamic>>);

  @override
  _i4.Future<List<_i5.Item>> getItems() => (super.noSuchMethod(
        Invocation.method(
          #getItems,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Item>>.value(<_i5.Item>[]),
      ) as _i4.Future<List<_i5.Item>>);
}
